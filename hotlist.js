var json = {"code":"/**\n                  Contest: Underground\n                \n         I have completed 100% of Khan Academy's \n        'Intro to JS' and have been programming \n                    for ~36 months.\n    \n          I would prefer to be placed in the\n                    [Intermediate]\n                       bracket\n*/\n//for the judges ^\n/**\n    ****************\n    *Cavern Clash\n    *By Avenger\n    *Oct.26 2024\n    ****************\n@Attention\nPLEASE REPORT ALL BUGS, GLITCHES OR TIPS THAT YOU COME ACROSS, I WOULD LOVE TO MAKE IT AS ENJOYABLE AS POSSIBLE FOR EVERYONE! THANK YOU!\n\nALSO I'M ONLY TAKING THE TOP FOUR BEST TIMES <----LOOK\n\n@Subcribe\nhttps://www.khanacademy.org/computer-programming/avengers-sub-page/5088508691267584\n\n@Notes\nIt's a very late project for Khantober, \nIts also for contest \"Underground\"\n*/\n\n\n/*Here are some stuff you might want to change*/\nvar StartMoney = 400;//Money!\nvar hard = false;//want the game to be hard?\nvar shudder_and_fall=true;//do you want the sceen to shake?\n\n\nvar Scores=[\n    {\n    Name:\"Duke :P\", \n    Score:365\n    }, \n    {\n    Name:\"Panda15\", \n    Score:406\n    }, \n    {\n    Name:\"The Behemoth\", \n    Score:375\n    }, \n    {\n    Name:\"Radar\", \n    Score:375\n    }, \n    ];\n\n\n//jshint evil:true\n//{\nvar scene = \"home\";\nvar click = false;\nvar ARB = createFont(\"Arial Black\");\nvar GameName = createFont(\"Arial Black Italic\");\n//}vars for random\n//{\nvar deadPic;\nvar picSize = 600;\n//{\nvar firstBg = (function(){\n    background(255, 255, 255, 0);\n    pushMatrix();\n    noStroke();\n    fill(71, 56, 26);\n    rect(0, 325, width, 20);\n    fill(38, 38, 37);\n    noStroke();\n    beginShape();\n        vertex(0, 0);\n        vertex(1, 86);\n        vertex(5, 89);\n        vertex(7, 104);\n        vertex(9, 119);\n        vertex(13, 136);\n        vertex(13, 174);\n        vertex(17, 222);\n        vertex(13, 228);\n        vertex(14, 253);\n        vertex(10, 259);\n        vertex(10, 273);\n        vertex(14, 277);\n        vertex(8, 291);\n        vertex(8, 295);\n        vertex(0, 307);\n        vertex(0, 332);\n        vertex(30, 329);\n        vertex(52, 336);\n        vertex(102, 330);\n        vertex(173, 328);\n        vertex(216, 326);\n        vertex(224, 331);\n        vertex(234, 330);\n        vertex(244, 328);\n        vertex(261, 331);\n        vertex(280, 332);\n        vertex(310, 332);\n        vertex(337, 332);\n        vertex(362, 333);\n        vertex(380, 334);\n        vertex(389, 328);\n        vertex(408, 328);\n        vertex(422, 335);\n        vertex(460, 335);\n        vertex(471, 332);\n        vertex(516, 331);\n        vertex(526, 336);\n        vertex(545, 336);\n        vertex(560, 342);\n        vertex(600, 341);\n        vertex(600, 284);\n        vertex(594, 280);\n        vertex(589, 263);\n        vertex(587, 228);\n        vertex(583, 207);\n        vertex(587, 174);\n        vertex(587, 156);\n        vertex(583, 115);\n        vertex(586, 102);\n        vertex(584, 80);\n        vertex(599, 59);\n        vertex(599, 0);\n        vertex(556, 0);\n        vertex(558, 65);\n        vertex(563, 80);\n        vertex(565, 92);\n        vertex(563, 104);\n        vertex(569, 113);\n        vertex(568, 140);\n        vertex(573, 149);\n        vertex(571, 164);\n        vertex(571, 208);\n        vertex(573, 220);\n        vertex(568, 244);\n        vertex(564, 268);\n        vertex(544, 293);\n        vertex(525, 297);\n        vertex(515, 294);\n        vertex(507, 296);\n        vertex(499, 287);\n        vertex(482, 296);\n        vertex(458, 297);\n        vertex(444, 288);\n        vertex(433, 270);\n        vertex(425, 246);\n        vertex(420, 218);\n        vertex(416, 160);\n        vertex(414, 139);\n        vertex(414, 125);\n        vertex(412, 105);\n        vertex(431, 63);\n        vertex(438, 0);\n        vertex(385, 0);\n        vertex(384, 69);\n        vertex(389, 92);\n        vertex(386, 104);\n        vertex(395, 122);\n        vertex(396, 142);\n        vertex(397, 155);\n        vertex(400, 169);\n        vertex(402, 216);\n        vertex(400, 232);\n        vertex(400, 245);\n        vertex(393, 259);\n        vertex(392, 277);\n        vertex(376, 292);\n        vertex(361, 299);\n        vertex(354, 295);\n        vertex(327, 295);\n        vertex(321, 298);\n        vertex(308, 293);\n        vertex(303, 275);\n        vertex(296, 277);\n        vertex(290, 287);\n        vertex(271, 304);\n        vertex(255, 307);\n        vertex(237, 298);\n        vertex(217, 292);\n        vertex(207, 281);\n        vertex(202, 264);\n        vertex(199, 261);\n        vertex(197, 237);\n        vertex(192, 236);\n        vertex(193, 218);\n        vertex(189, 214);\n        vertex(193, 204);\n        vertex(193, 194);\n        vertex(189, 186);\n        vertex(192, 150);\n        vertex(193, 128);\n        vertex(193, 103);\n        vertex(191, 102);\n        vertex(195, 93);\n        vertex(194, 74);\n        vertex(214, 57);\n        vertex(242, 73);\n        vertex(244, 97);\n        vertex(252, 102);\n        vertex(263, 118);\n        vertex(267, 133);\n        vertex(270, 156);\n        vertex(275, 181);\n       //\n        vertex(281, 181);\n        vertex(281, 150);\n        vertex(286, 137);\n        vertex(281, 130);\n        vertex(285, 123);\n        vertex(283, 107);\n        vertex(302, 70);\n        vertex(307, 70);\n        vertex(314, 83);\n        vertex(314, 97);\n        vertex(318, 102);\n        vertex(321, 122);\n        vertex(327, 124);\n        vertex(331, 86);\n        vertex(340, 70);\n        vertex(354, 72);\n        vertex(371, 66);\n        vertex(384, 67);\n        vertex(387, 0);\n       //\n        vertex(151, 0);\n        vertex(154, 83);\n        vertex(158, 106);\n        vertex(165, 126);\n        vertex(172, 147);\n        vertex(170, 160);\n        vertex(176, 175);\n        vertex(176, 184);\n        vertex(173, 185);\n        vertex(173, 217);\n        vertex(172, 256);\n        vertex(164, 265);\n        vertex(164, 279);\n        vertex(155, 295);\n        vertex(145, 303);\n        vertex(134, 304);\n        vertex(120, 308);\n        vertex(106, 295);\n       //\n        vertex(99, 295);\n        vertex(94, 305);\n        vertex(80, 309);\n        vertex(61, 313);\n        vertex(44, 293);\n        vertex(38, 287);\n        vertex(39, 270);\n        vertex(31, 260);\n        vertex(34, 252);\n        vertex(27, 226);\n        vertex(26, 203);\n        vertex(25, 180);\n        vertex(27, 157);\n        vertex(24, 144);\n        vertex(28, 125);\n        vertex(35, 99);\n        vertex(43, 88);\n        vertex(44, 80);\n        vertex(65, 72);\n        vertex(77, 80);\n        vertex(84, 86);\n        vertex(89, 104);\n        vertex(91, 107);\n        vertex(90, 127);\n        vertex(95, 138);\n        vertex(93, 147);\n        vertex(92, 155);\n        vertex(95, 164);\n        vertex(98, 178);\n        vertex(95, 187);\n        vertex(99, 193);\n        vertex(99, 214);\n        vertex(102, 228);\n        vertex(106, 224);\n        vertex(107, 212);\n        vertex(107, 192);\n        vertex(111, 185);\n        vertex(110, 177);\n        vertex(108, 161);\n        vertex(112, 145);\n        vertex(109, 139);\n        vertex(116, 122);\n        vertex(114, 106);\n        vertex(120, 84);\n        vertex(154, 81);\n        vertex(151, 0);\n    endShape();\n    popMatrix();\n    return get(0, 0, 600, 340);\n})();\nvar secondBg = (function(){\n    background(255, 255, 255, 0);\n    pushMatrix();\n    noStroke();\n    fill(15, 15, 15);\n    noStroke();\n    beginShape();\n        vertex(0, 0);\n        vertex(0, 19);\n        vertex(11, 20);\n        vertex(16, 26);\n        vertex(20, 37);\n        vertex(23, 43);\n        vertex(24, 57);\n        vertex(27, 64);\n        vertex(28, 80);\n        vertex(36, 95);\n        vertex(41, 96);\n        vertex(42, 86);\n        vertex(43, 81);\n        vertex(40, 65);\n        vertex(47, 44);\n        vertex(54, 22);\n        vertex(77, 22);\n        vertex(80, 16);\n        vertex(87, 21);\n        vertex(108, 20);\n        vertex(110, 31);\n        vertex(120, 31);\n        vertex(120, 54);\n        vertex(123, 59);\n        vertex(125, 81);\n        vertex(131, 89);\n        vertex(134, 106);\n        vertex(141, 116);\n        vertex(145, 61);\n        vertex(160, 51);\n        vertex(170, 21);\n        vertex(188, 18);\n        vertex(197, 21);\n        vertex(215, 14);\n        vertex(223, 21);\n        vertex(241, 22);\n        vertex(245, 16);\n        vertex(252, 25);\n        vertex(259, 27);\n        vertex(262, 45);\n        vertex(266, 51);\n        vertex(264, 63);\n        vertex(266, 69);\n        vertex(266, 82);\n        vertex(272, 86);\n        vertex(276, 111);\n        vertex(278, 111);\n        vertex(279, 87);\n        vertex(282, 77);\n        vertex(281, 73);\n        vertex(288, 63);\n        vertex(288, 54);\n        vertex(293, 43);\n        vertex(298, 25);\n        vertex(312, 19);\n        vertex(319, 29);\n        vertex(325, 41);\n        vertex(329, 58);\n        vertex(332, 72);\n        vertex(337, 72);\n        vertex(340, 46);\n        vertex(344, 43);\n        vertex(342, 20);\n        vertex(346, 15);\n        vertex(363, 20);\n        vertex(381, 15);\n        vertex(394, 20);\n        vertex(408, 16);\n        vertex(416, 11);\n        vertex(432, 14);\n        vertex(445, 10);\n        vertex(451, 29);\n        vertex(459, 33);\n        vertex(458, 48);\n        vertex(464, 54);\n        vertex(465, 61);\n        vertex(471, 67);\n        vertex(470, 94);\n        vertex(476, 99);\n        vertex(480, 71);\n        vertex(483, 65);\n        vertex(483, 58);\n        vertex(489, 50);\n        vertex(488, 39);\n        vertex(495, 33);\n        vertex(493, 21);\n        vertex(500, 11);\n        vertex(512, 17);\n        vertex(517, 13);\n        vertex(531, 15);\n        vertex(534, 38);\n        vertex(541, 46);\n        vertex(541, 74);\n        vertex(544, 79);\n        vertex(550, 78);\n        vertex(554, 61);\n        vertex(557, 54);\n        vertex(554, 43);\n        vertex(557, 30);\n        vertex(563, 23);\n        vertex(562, 14);\n        vertex(598, 12);\n        vertex(599, 0);\n    endShape();\n    popMatrix();\n    return get(0, 0, 600, 110);\n})();\nvar groundRocks = (function(){\n    background(255, 255, 255, 0);\n    pushMatrix();\n    noStroke();\n    fill(71, 56, 26);\n    rect(0, 0, 600, 150);\n    for (var i = 0; i < 35; i+=1) {\n        //rocks\n        pushMatrix();    \n        translate(random(0, 600), random(20, 140));\n        scale(random(0.3, 0.6));\n        noStroke();\n        fill(46, 46, 46);\n        ellipse(0, 0, 30, 20);\n        fill(77, 76, 77);\n        ellipse(-5, -5, 10, 5);\n        popMatrix();\n    }\n    popMatrix();\n    return get(0, 0, 600, 150);\n})();\n//}cave BG\nvar cracks = (function(){\n    background(255, 255, 255, 0);\n    pushMatrix();\n    for (var i = 0; i < 30; i+=1) {\n        pushMatrix();    \n        translate(random(0, 600), random(0, 70));\n        scale(random(1, 1.5), random(1, -1));\n        strokeWeight(1);\n        stroke(31, 31, 31);\n        line(-20, 2, 0, -5);\n        line(0, -5, 20, 2);\n        popMatrix();\n    }\n    popMatrix();\n    return get(0, 0, 600, 70);\n})();//marks/sraches/crack in rocky dispay\nvar Stats = {\n    health: 100, \n    wavetime: 0,  \n    money: StartMoney, \n};\nvar buybutton = function(x, y, w, h, action, price) {\n\tfill(59, 59, 59);\n\tstroke(31, 31, 31);\n\tstrokeWeight(1);\n\tellipse(x, y, w, h);\n\tif (dist(mouseX, mouseY, x, y) <= w / 2&&mouseIsPressed&&Stats.money>price-1) {\n\t\taction();\n\t}\n\tif (dist(mouseX, mouseY, x, y) <= w / 2) {\n\t\tfill(0, 0, 0, 100);\n\t\tnoStroke();\n\t    ellipse(x, y, w, h);\n\t    cursor(\"pointer\");\n\t}\n\tfill(191, 191, 191);\n\ttextAlign(CENTER);\n\ttextSize(11);\n\ttext(\"Price: \"+price, x, y+35);\n\tstroke(0, 0, 0);\n};//shop buttons\nvar cirbutton = function(x, y, w, h, action, other) {\n\tfill(59, 59, 59);\n\tstroke(31, 31, 31);\n\tstrokeWeight(1);\n\tellipse(x, y, w, h);\n\tif (dist(mouseX, mouseY, x, y) <= w / 2&&mouseIsPressed&&other) {\n\t\taction();\n\t}\n\t\n\tif (dist(mouseX, mouseY, x, y) <= w / 2) {\n\t\tfill(0, 0, 0, 100);\n\t\tnoStroke();\n\t    ellipse(x, y, w, h);\n\t    cursor(\"pointer\");\n\t}\n\tstroke(0, 0, 0);\n};//circle buttons\n//{\nvar rumble = false;//if true, rocks fall\nvar FallRock1 = (function(){\n    background(255, 255, 255, 0);\n    pushMatrix();\n    fill(99, 99, 97);\n    noStroke();\n    stroke(0, 0, 0);\n    beginShape();\n        vertex(123, 245);\n        vertex(228, 148);\n        vertex(314, 171);\n        vertex(410, 162);\n        vertex(436, 251);\n        vertex(486, 293);\n        vertex(444, 378);\n        vertex(397, 435);\n        vertex(298, 401);\n        vertex(321, 342);\n        vertex(284, 325);\n        vertex(257, 344);\n        vertex(207, 332);\n        vertex(156, 355);\n        vertex(117, 324);\n        vertex(123, 246);\n    endShape();\n    popMatrix();\n    return get(0, 0, 600, 600);\n})();\nvar FallRock2 = (function(){\n    background(255, 255, 255, 0);\n    pushMatrix();\n    fill(54, 54, 53);\n    noStroke();\n    stroke(0, 0, 0);\n    beginShape();\n        vertex(183, 390);\n        vertex(258, 381);\n        vertex(326, 408);\n        vertex(387, 370);\n        vertex(446, 339);\n        vertex(492, 355);\n        vertex(519, 305);\n        vertex(487, 218);\n        vertex(444, 233);\n        vertex(418, 173);\n        vertex(343, 160);\n        vertex(313, 198);\n        vertex(227, 187);\n        vertex(161, 186);\n        vertex(130, 261);\n        vertex(150, 297);\n        vertex(146, 356);\n        vertex(182, 391);\n    endShape();\n    popMatrix();\n    return get(0, 0, 600, 600);\n})();\nvar FallRock3 = (function(){\n    background(255, 255, 255, 0);\n    pushMatrix();\n    fill(66, 65, 66);\n    noStroke();\n    stroke(0, 0, 0);\n    beginShape();\n        vertex(200, 190);\n        vertex(269, 163);\n        vertex(322, 175);\n        vertex(326, 244);\n        vertex(366, 267);\n        vertex(376, 323);\n        vertex(348, 366);\n        vertex(370, 415);\n        vertex(299, 434);\n        vertex(244, 414);\n        vertex(242, 373);\n        vertex(191, 356);\n        vertex(206, 285);\n        vertex(173, 247);\n        vertex(200, 191);\n    endShape();\n    popMatrix();\n    return get(0, 0, 600, 600);\n})();\n\nvar Rocks = [];\nfunction Debris (x, speed, rock, y) {\n    this.x = x;\n    this.speed = speed;\n    this.rock = rock;\n    this.y = y;\n    \n}\nDebris.prototype.display = function () {\n    if(this.rock === 1){\n        image(FallRock1, this.x-50, this.y-90, 40, 40);\n    }\n    if(this.rock === 3){\n        image(FallRock2, this.x-50, this.y-90, 40, 40);\n    }\n    if(this.rock === 2){\n        image(FallRock3, this.x-50, this.y-90, 40, 40);\n    }\n    \n    this.y += this.speed;\n};\n//}falling rocks\n//{\nvar characters = [];\nvar enemies = [];\n\nvar tower = function(x, y, s, hoverspeed){\n    pushMatrix();\n    translate(x, y);\n    scale(s);\n    strokeCap(SQUARE);\n    strokeWeight(1);\n    stroke(0, 0, 0);\n    //cris-crossing planks (back)\n    rotate(40);\n    fill(87, 45, 3);\n    rect(-170, -100, 200, 20);\n    rotate(-80);\n    rect(-40, -100, 200, 20);\n    rotate(40);\n    //front pillars\n    fill(128, 73, 0);\n    quad(-100, 0, -80, -200, -60, -200, -80, 0);\n    quad(100, 0, 80, -200, 60, -200, 80, 0);\n    //back pillars\n    fill(102, 59, 3);\n    quad(-65, -30, -45, -200, -60, -200, -77, -30);\n    quad(65, -30, 45, -200, 60, -200, 77, -30);\n    //cris-crossing planks (front)\n    rotate(40);\n    fill(115, 59, 2);\n    rect(-170, -90, 220, 20);\n    rotate(-80);\n    rect(-50, -90, 220, 20);\n    rotate(40);\n    //platform\n    fill(74, 48, 0);\n    quad(-90, -190, 90, -190, 80, -220, -80, -220);\n    noStroke();\n    fill(255, 255, 255, 180);\n    ellipse(0, -205, 130+cos(frameCount * hoverspeed) * 10, 20);\n    for(var i = 0; i<120; i+=1){\n        stroke(255, 255, 255, i*0.05);\n        strokeWeight(i/4);\n        ellipse(0, -260+cos(frameCount * hoverspeed) * 10, 80, 80);\n    }//glow\n    fill(36, 26, 2);\n    strokeWeight(1);\n    stroke(0, 0, 0);\n    rect(-75, -265, 10, 50, 20, 20, 0, 0);\n    rect(65, -265, 10, 50, 20, 20, 0, 0);\n    rect(-85, -255, 10, 60, 20, 20, 0, 0);\n    rect(75, -255, 10, 60, 20, 20, 0, 0);\n    strokeCap(ROUND);\n    popMatrix();\n};\nfunction ZapTower (x, y, hover) {\n    \n    this.x = x;\n    this.y = y;\n    this.hover = hover;\n    this.health = 100;\n    this.range = 230;\n    this.dmg = 5;\n    this.type = \"tower\";\n    this.reload = 50;\n    \n}\nZapTower.prototype.display = function () {\n    tower(this.x, this.y, 0.3, this.hover);\n    if(this.health<100){\n        noStroke();\n        fill(255, 0, 0);\n        rect(this.x-25, this.y-105, 50, 5);\n        fill(0, 255, 4);\n        rect(this.x-25, this.y-105, this.health/2, 5);\n        this.health = this.health+0.01; \n    }\n    else{\n        this.health = 100;\n    }\n    this.reload -= 5;\n};\n\nvar cristals = function(x, y, s, glowing){\n    var shard = function(x, y, w, h, rot){\n        pushMatrix();\n        translate(x, y);\n        scale(w, h);\n        rotate(rot);\n        //body\n        stroke(0, 0, 0);\n        strokeWeight(1);\n        fill(255, 0, 230);\n        beginShape();\n            vertex(0, 0);\n            vertex(25, 30);\n            vertex(15, 130);\n            vertex(-15, 130);\n            vertex(-25, 30);\n            vertex(0, 0);\n        endShape();\n        line(0, 0, 0, 130);\n        line(25, 30, 0, 40);\n        //shaded part\n        fill(0, 0, 0, 100);\n        triangle(0, 0, -25, 30, 0, 40);\n        popMatrix();\n    };\n    pushMatrix();\n    translate(x, y);\n    scale(s);\n    shard(45, -138, 0.5, 1, 30);\n    shard(-40, -148, 0.4, 1.2, -30);\n    shard(-80, -108, 1, 0.8, -30);\n    shard(0, -138);\n    shard(60, -108, 0.8, 0.8, 30);\n    \n    for(var i = 0; i<120; i+=1){\n        stroke(250, 0, 255, i*0.05);\n        strokeWeight(i/9+cos(frameCount * glowing) * 2);\n        noFill();\n        beginShape();\n            vertex(-40, -20);\n            vertex(-90, -80);\n            vertex(-80, -110);\n            vertex(-45, -100);\n            vertex(-44, -155);\n            vertex(-24, -135);\n            vertex(-20, -120);\n            vertex(-0, -145);\n            vertex(20, -120);\n            vertex(48, -145);\n            vertex(50, -110);\n            vertex(65, -113);\n            vertex(70, -80);\n            vertex(35, -30);\n        endShape();\n    }//glow\n    stroke(0, 0, 0);\n    strokeWeight(1);\n    fill(40, 40, 40);\n    beginShape();\n        vertex(-55, 0);\n        vertex(-35, -23);\n        vertex(-20, -18);\n        vertex(-10, -28);\n        vertex(10, -28);\n        vertex(20, -18);\n        vertex(30, -33);\n        vertex(55, 0);\n    endShape();\n    popMatrix();\n};\nfunction Cristals (x, y, glow) {\n    \n    this.x = x;\n    this.y = y;\n    this.glow = glow;\n    this.type = \"gem\";\n    this.range = 100;\n    this.reload = 50;\n    this.health = 100;\n    \n}\nCristals.prototype.display = function () {\n    cristals(this.x, this.y, 0.2, this.glow);\n    if(this.health<100){\n        noStroke();\n        fill(255, 0, 0);\n        rect(this.x-25, this.y-45, 50, 5);\n        fill(0, 255, 4);\n        rect(this.x-25, this.y-45, this.health/2, 5);\n        this.health = this.health+0.01; \n    }\n    else{\n        this.health = 100;\n    }\n    this.reload -= 5;\n};\n\nvar bomb = function(x, y, s){\n    pushMatrix();\n    translate(x, y);\n    scale(s);\n    stroke(0, 0, 0);\n    strokeWeight(7);\n    noFill();\n    bezier(0, -30, 0, -70, 20, -35, 10, -65);\n    stroke(255, 255, 255);\n    strokeWeight(5);\n    bezier(0, -30, 0, -70, 20, -35, 10, -65);\n    fill(105, 105, 105);\n    stroke(0, 0, 0);\n    strokeWeight(1);\n    arc(0, 0, 80, 80, 182, 360);\n    stroke(0, 0, 0);\n    strokeWeight(1);\n    fill(40, 40, 40);\n    beginShape();\n        vertex(-55, 0);\n        vertex(-35, -10);\n        vertex(-20, -8);\n        vertex(-10, -10);\n        vertex(10, -10);\n        vertex(20, -8);\n        vertex(30, -10);\n        vertex(55, 0);\n    endShape();\n    popMatrix();\n};\nfunction Bomb (x, y) {\n    \n    this.x = x;\n    this.y = y;\n    this.health = 100;\n    this.type = \"bomb\";\n    this.active = false;\n    this.range = 20;//whats its trigger range\n    this.explosionRadius = 80;//how far can it explode\n    \n}\nBomb.prototype.display = function () {\n    bomb(this.x, this.y, 0.3);\n    if(this.active){\n        pushMatrix();\n        translate(this.x, this.y);\n        noStroke();\n        fill(255, 0, 0);\n        beginShape();\n            vertex(-10, 0);\n            vertex(-30, -15);\n            vertex(-15, -15);\n            vertex(-5, -30);\n            vertex(0, -20);\n            vertex(5, -25);\n            vertex(8, -15);\n            vertex(25, -25);\n            vertex(10, 0);\n        endShape();\n        fill(255, 242, 0);\n        beginShape();\n            vertex(-10, 0);\n            vertex(-18, -10);\n            vertex(-10, -7);\n            vertex(-5, -20);\n            vertex(0, -10);\n            vertex(5, -15);\n            vertex(5, -5);\n            vertex(15, -15);\n            vertex(10, 0);\n        endShape();\n        popMatrix();\n        this.health = 0;\n    }//explosion when stepped on\n};\nvar shakeTime = 0;\n\nvar plants = function(x, y, s, wavespeed, biten){\n    pushMatrix();\n    translate(x, y);\n    scale(-s, s);\n    strokeCap(SQUARE);\n    stroke(0, 0, 0);\n    strokeWeight(1);\n    fill(48, 48, 48);\n    rect(-50, 0, 100, -50);\n    noStroke();\n    fill(0, 0, 0, 90);\n    rect(-50, -40, 100, 10);\n    //plant\n    stroke(30, 89, 6);\n    noFill();\n    strokeWeight(10);\n    bezier(0, -3, -10+cos(frameCount * wavespeed) * 15, -20, 20+cos(frameCount * wavespeed) * 10, -40, cos(frameCount * wavespeed/2) * 10, -70);//stem\n    noStroke();\n    fill(30, 98, 6);\n    arc(cos(frameCount * wavespeed/2) * 10, -85, 40, 40, -30 , 170);\n    fill(207, 207, 207);\n    triangle(17+cos(frameCount * wavespeed/2) * 10, -95, 10+cos(frameCount * wavespeed/2) * 10, -100, 8+cos(frameCount * wavespeed/2) * 10, -90);\n    triangle(8+cos(frameCount * wavespeed/2) * 10, -90, cos(frameCount * wavespeed/2) * 10, -95, cos(frameCount * wavespeed/2) * 10, -85);\n    triangle(cos(frameCount * wavespeed/2) * 10-10, -82, cos(frameCount * wavespeed/2) * 10-8, -93, cos(frameCount * wavespeed/2) * 10, -85);\n    triangle(cos(frameCount * wavespeed/2) * 10-20, -81, cos(frameCount * wavespeed/2) * 10-18, -92, cos(frameCount * wavespeed/2) * 10-10, -82);\n    if(biten){\n        fill(30, 89, 6);\n        noStroke();\n        ellipse(cos(frameCount * wavespeed/2) * 10, -82, 43, 43);\n        stroke(0);\n        strokeWeight(1);\n        line(cos(frameCount * wavespeed/2) * 10-10, -100, cos(frameCount * wavespeed/2) * 10, -80);\n        noStroke();\n    }\n    //shadow\n    fill(0, 0, 0, 180);\n    rect(-50, -10, 100, 10);\n    fill(0, 0, 0, 150);\n    rect(-50, -20, 100, 10);\n    fill(0, 0, 0, 120);\n    rect(-50, -30, 100, 10);\n    stroke(0, 0, 0);\n    strokeWeight(1);\n    \n    popMatrix();\n};\nfunction Plant (x, y, wave) {\n    \n    this.x = x;\n    this.y = y;\n    this.wave = wave;\n    this.health = 100;\n    this.range = 60;\n    this.dmg = 1;\n    this.type = \"plant\";\n    this.reload = 30;\n    this.bite = false;\n    \n}\nPlant.prototype.display = function () {\n    plants(this.x, this.y, 0.3, this.wave, this.bite);\n    if (frameCount % 10 < 1) {\n        this.bite = false;\n    }\n    if(this.health<100){\n        noStroke();\n        fill(255, 0, 0);\n        rect(this.x-25, this.y-45, 50, 5);\n        fill(0, 255, 4);\n        rect(this.x-25, this.y-45, this.health/2, 5);\n        this.health = this.health+0.02; \n    }\n    else{\n        this.health = 100;\n    }\n    this.reload -= 5;\n    \n};\n\nvar Slime = function(x, y, w, h){\n    pushMatrix();\n    translate(x-130, y-130);\n    scale(w, h);\n    noStroke();\n    fill(88, 181, 38, 150);\n    beginShape();\n    vertex(48, 107);\n    bezierVertex(38, -56, 278, 93, 249, 121);\n    bezierVertex(173, 166, 50, 158, 48, 107);\n    endShape();\n    fill(68, 145, 26, 150);\n    beginShape();\n    vertex(50, 117);\n    bezierVertex(38, -36, 278, 113, 249, 121);\n    bezierVertex(173, 166, 50, 158, 48, 107);\n    endShape();\n    fill(44, 115, 8, 150);\n    ellipse(140, 130, 145, 25);\n    pushMatrix();\n    fill(255, 255, 255);\n    rotate(45);\n    ellipse(95, -25, 20, 40);\n    popMatrix();\n    fill(255, 0, 0);\n    ellipse(80, 90, 20, 10);\n    popMatrix();\n};\nfunction Trooper (x, y, speed) {\n    \n    this.x = x;\n    this.y = y;\n    this.speed = speed;\n    this.health = 100;\n    this.range = 40;\n    this.dmg = random(2, 5);\n    this.type = \"troop\";\n    this.reload = 70;\n    \n}\nTrooper.prototype.display = function () {\n    Slime(this.x+110, this.y+115, 0.15);\n    if(this.health<100){\n        noStroke();\n        fill(64, 13, 3);\n        rect(this.x-25, this.y-25, 50, 5);\n        fill(3, 79, 3);\n        rect(this.x-25, this.y-25, this.health/2, 5);\n    }\n    this.reload -= 5;\n};\nTrooper.prototype.pickTarget = function(){\n    var target;\n    var closestDist = Infinity;\n    \n    for(var i = 0; i < characters.length; i ++){\n        \n        var distance = dist(this.x, this.y, characters[i].x, characters[i].y);\n        if(distance < closestDist){\n            target = characters[i];\n            closestDist = distance;\n        }\n    }\n    \n    return(target);\n};\nTrooper.prototype.attack = function(){\n    var target = this.pickTarget();\n    if(target && dist(target.x, target.y, this.x, this.y) < 200){\n        //find the angle\n        var ang = atan2(this.y - target.y, this.x - target.x);\n\n        //update movement\n        this.x -= cos(ang) * this.speed;\n        this.y -= sin(ang) * this.speed;\n        \n    }\n    else if(this.x > -20){\n        this.x -= this.speed;\n    }\n};\nvar maxAmt = 1.1;//max amt of troops that are allowed to spawn \nvar bombSpawn = 1;//how many bombs are going to spawn\nvar troopSpawn = 1;//how many troops are going to spawn\nvar spawnrate = 850;\n\nvar grenade = function(x, y, s, rot){\n    pushMatrix();\n    translate(x, y);\n    scale(s);\n    if(rot){\n        rotate(-frameCount*2);\n    }\n    stroke(0, 0, 0);\n    strokeWeight(13);\n    noFill();\n    bezier(0, -30, 0, -70, 40, -35, 30, -65);\n    stroke(255, 255, 255);\n    strokeWeight(8);\n    bezier(0, -30, 0, -70, 40, -35, 30, -65);\n    fill(0, 0, 0);\n    stroke(0, 0, 0);\n    strokeWeight(1);\n    ellipse(0, 0, 80, 80);\n    fill(250, 237, 237, 150);\n    pushMatrix();\n    rotate(30);\n    ellipse(-20, -6, 20, 30);\n    popMatrix();\n    pushMatrix();\n    for (var i = 0; i < 5; i+=1) {\n        //sparks\n        pushMatrix();    \n        translate(random(15, 45), random(-80, -50));\n        scale(random(0.3, 0.6));\n        noStroke();\n        fill(189, 44, 7);\n        ellipse(0, 0, 20, 20);\n        popMatrix();\n        pushMatrix();\n        translate(random(15, 45), random(-80, -50));\n        scale(random(0.3, 0.6));\n        fill(255, 255, 0);\n        ellipse(0, 0, 20, 20);\n        popMatrix();\n    }\n    popMatrix();\n    popMatrix();\n};\nfunction Grenade (y, speed, stop) {\n    \n    this.x = 650;\n    this.y = y;\n    this.speed = speed;\n    this.stop = stop;\n    this.explosionRadius = 60;//how far can it explode\n    this.dmg = random(20, 30);\n    this.type = \"bomb\";\n    this.timer = 100;\n    this.active = false;\n    this.health = 100;\n    this.rotating = true;\n    \n}\nGrenade.prototype.display = function () {\n    if(this.x > this.stop){\n        this.x -= this.speed;\n        this.rotation = true;\n    }\n    else{\n        this.rotation = false;\n    }//stop the rotating\n    grenade(this.x, this.y, 0.2, this.rotation);\n    if(this.active){\n        pushMatrix();\n        translate(this.x, this.y);\n        noStroke();\n        fill(255, 0, 0);\n        beginShape();\n            vertex(-10, 0);\n            vertex(-30, -15);\n            vertex(-15, -15);\n            vertex(-5, -30);\n            vertex(0, -20);\n            vertex(5, -25);\n            vertex(8, -15);\n            vertex(25, -25);\n            vertex(10, 0);\n        endShape();\n        fill(255, 242, 0);\n        beginShape();\n            vertex(-10, 0);\n            vertex(-18, -10);\n            vertex(-10, -7);\n            vertex(-5, -20);\n            vertex(0, -10);\n            vertex(5, -15);\n            vertex(5, -5);\n            vertex(15, -15);\n            vertex(10, 0);\n        endShape();\n        popMatrix();\n        this.health = 0;\n    }//explosion when timer runs up\n    if (this.timer < 0) {\n        this.active = true;//trigger bomb\n    }//light the bomb if timer runs up\n    if(dist(this.x, this.y, this.stop, this.y) < 20){\n        this.timer -= 2;\n    }\n};\nGrenade.prototype.pickTarget = function(){\n};//it will crash without this\nGrenade.prototype.attack = function(){\n};//it will crash without this\n//}characters and enemies\nvar selected = \"none\";\n//}vars for game (game)\n//{\nvar MainBg = (function(){\n    background(255, 255, 255, 0);\n    pushMatrix();\n    background(69, 69, 69);\n    for(var i = 0; i < 40; i ++){\n        noStroke();\n        fill(10, 10, 10, i*8);\n        rect(-1, i*10, width+1, 10);\n    }\n    imageMode(CORNER);\n    image(firstBg, 0, 0, 600, 220);\n    image(secondBg, 0, 0, 600, 100);\n    image(groundRocks, 0, 220, 600, 180);\n    tower(120, 350, 0.9, 2);\n    Slime(570, 450, 0.5);\n    Slime(600, 350, 0.5);\n    stroke(255, 255, 255);\n    strokeWeight(15);\n    noFill();\n    beginShape();\n        vertex(120, 120+cos(frameCount * 2) * 10);\n        vertex(random(170, 210), random(150, 200));\n        vertex(random(270, 310), random(220, 270));\n        vertex(random(400, 430), random(250, 320));  \n        vertex(random(500, 520), random(360, 370));                endShape();\n    grenade(300, 350, 0.6, 0);\n    filter(BLUR, 2);\n    popMatrix();\n    return get(0, 0, 600, 400);\n})();//the background\nfunction HomeButton(x, y, txt, siz, action){\n    \n    this.x = x;\n    this.y = y;\n    this.txt = txt;\n    this.siz = siz;\n    this.action = action;\n    \n}\nHomeButton.prototype.display = function(){\n    pushMatrix();\n    translate(this.x, this.y);\n    noStroke();\n    stroke(0);\n    strokeWeight(1);\n    fill(79, 55, 2);\n    arc(0, 0, 100, 100, 140, 400);\n    beginShape();\n    vertex(-48, 0);\n    vertex(-30, 80);\n    vertex(-10, 48);\n    vertex(0, 100);\n    vertex(20, 44);\n    vertex(30, 70);\n    vertex(45, 0);\n    endShape();\n    strokeWeight(this.siz/10);\n    stroke(79, 55, 2);\n    fill(31, 20, 1);\n    ellipse(0, 0, this.siz, this.siz);\n    if (dist(mouseX, mouseY, this.x, this.y) <= this.siz / 2) {\n        cursor(\"pointer\");\n\t    //did they click?\n\t    if(click){\n\t        this.action();\n\t    }\n\t    //or are they hovering?\n\t    else{\n            rotate(cos(frameCount * 10) * 15);\n\t    }\n\t}\n\t//{\n\tif(this.siz<100){\n        textSize(-this.txt.length+(this.siz/3.3));\n\t}\n\telse{\n        textSize(-this.txt.length+(this.siz/4));\n\t}\n\tfill(128, 148, 0);\n\ttextFont(ARB, 20);\n    textAlign(CENTER, CENTER);\n\ttext(this.txt, 0, 0);//name of button\n\t//}text stuff\n\tpopMatrix();\n};\nvar Play = new HomeButton(300, 180, 'PLAY', 90, function(){\n    scene = \"game\";\n});//x, y, text, size, what you want to happen\nvar How = new HomeButton(420, 280, 'HOW', 90, function(){\n    scene = \"how\";\n});//x, y, text, size, what you want to happen\nvar Sub = new HomeButton(180, 280, 'SUB?', 90, function(){\n    _clearLogs();\n    println(\"Here you go:\\nhttps://www.khanacademy.org/computer-programming/avengers-sub-page/5088508691267584\");\n});//x, y, text, size, what you want to happen\nvar Back = new HomeButton(70, 330, 'BACK', 90, function(){\n    scene = \"home\";\n});//x, y, text, size, what you want to happen\n//}vars for home screen\nmouseClicked = function(){\n    click = true;\n};\ndraw = function() {\n    cursor(\"Default\");//set mouse back to normal\n    try {\n    switch (scene){\n        case \"home\":\n            //background\n            image(MainBg, 0, 0, 600, 400);\n            //buttons\n            Play.display();\n            How.display();\n            Sub.display();\n            //{\n            textFont(GameName, 70);\n            textAlign(CENTER, CENTER);\n            pushMatrix();\n            translate(300, 50);\n            fill(140, 89, 7);\n            for(var i = 0; i < 360; i+= 30) {\n                text(\"Cavern Clash\", sin(i)*2, cos(i)*2);\n                strokeWeight(4);\n                rect(-250, 40, 500, 10, 10, 10, 0, 0);\n            }\n            fill(66, 38, 1);\n            text(\"Cavern Clash\", 0, 0);\n            popMatrix();\n            //}text\n        break;\n        \n        case \"how\":\n            //background\n            image(MainBg, 0, 0, 600, 400);\n            //{\n            textFont(GameName, 70);\n            textAlign(CENTER, CENTER);\n            pushMatrix();\n            translate(300, 50);\n            fill(140, 89, 7);\n            for(var i = 0; i < 360; i+= 30) {\n                text(\"HOW\", sin(i)*2, cos(i)*2);\n                strokeWeight(4);\n                rect(-150, 40, 300, 10, 10, 10, 0, 0);\n            }\n            fill(66, 38, 1);\n            text(\"HOW\", 0, 0);\n            popMatrix();\n            //}word \"how\"\n            //{\n            textFont(ARB);\n            fill(0, 0, 0);\n            textAlign(CENTER, TOP);\n            textSize(18);\n            pushMatrix();\n            translate(300, 120);\n            fill(140, 89, 7);\n            for(var i = 0; i < 360; i+= 30) {\n                text(\"There are four buttons at the top the sceen\\nthat you use to build defence.\\n1. Cristal, heals other defences (dmg: none)\\n2. Tower, zaps one enemy in range at a time (dmg: good)\\n3. Bomb, explodes all enemies in range when stepped\\non (dmg: very high)\\n4. Plant, bites one enemy in range\\nat a time & heal faster (dmg: low)\\nStay alive as long as you can.\", sin(i)*2, cos(i)*2);\n            }\n            fill(66, 38, 1);\n            text(\"There are four buttons at the top the sceen\\nthat you use to build defence.\\n1. Cristal, heals other defences (dmg: none)\\n2. Tower, zaps one enemy in range at a time (dmg: good)\\n3. Bomb, explodes all enemies in range when stepped\\non (dmg: very high)\\n4. Plant, bites one enemy in range\\nat a time & heal faster (dmg: low)\\nStay alive as long as you can.\", 0, 0);\n            popMatrix();\n            //}how to play words\n            Back.display();\n        break;\n        \n        case \"game\":\n            textFont(ARB, 10);//this font for game scene\n            Stats.wavetime += 0.015;//increase time\n            pushMatrix();\n            if(shakeTime > 0&&shudder_and_fall){\n                translate(random(-3, 3), random(-3, 3));\n                shakeTime -= 1;\n            }//shake the screen\n            else{\n                translate(0, 0);\n            }\n            background(36, 36, 36);\n            //{\n            for (var i = 0; i < Rocks.length; i++) {\n                Rocks[i].display();\n                if(Rocks[i].y>300){\n                    Rocks.splice(i, 1);\n                }//once they cant be seen remove them from the array \n            }\n            if(rumble&&shudder_and_fall){\n                for (var i = 0; i < 10; i+=1) {\n                    Rocks.push(new Debris(random(0, 600), random(3, 2), round(random(1, 3.4)), random(-300, -60)));  \n                }\n                rumble = false;\n            }//if a bomb just exploded make rocks fall\n                //}draw falling rocks\n            //{\n            for(var i = 0; i < 40; i ++){\n                noStroke();\n                fill(10, 10, 10, i*8);\n                rect(-1, i*10, width+1, 10);\n            }\n            imageMode(CORNER);\n            image(firstBg, 0, 50, 600, 200);\n            image(secondBg, 0, 70, 510, 80);\n            image(groundRocks, 0, 250, 600, 150);\n            //}background (literaly the first time i've used image)\n            //{\n            for (var i = 0; i < enemies.length; i++) {\n                enemies[i].display();\n                enemies[i].attack();\n                if(enemies[i].health <= 0){\n                    enemies.splice(i, 1);//get rid of enemie if their life is less than zero\n                    if(enemies.type === \"troop\"){\n                        Stats.money += 40;\n                    }\n                    else{\n                        Stats.money += 10;\n                    }\n                }//kill it\n                if(enemies[i].x<-20){\n                    Stats.health -= 5;//make users health go down\n                    enemies.splice(i, 1);//delete enemy from array\n                    Stats.money += 50;//give user money\n                }\n                    \n                }\n            for (var i = 0; i < characters.length; i++) {\n                for (var j = 0; j < characters.length; j++) {\n                        if (j !== i) { // Don't include the current gem in the search\n                            var ob = characters[i]; // original gem    \n                            var tb = characters[j]; // target weapon\n                            if (dist(ob.x, ob.y, tb.x, tb.y) < ob.range&&ob.type === \"gem\" && ob.reload < 0 && tb.health < 100) {\n                                tb.health += 10;//add ten to other defence weapons health\n                                ob.reload = 900;//reset gem's heal time\n                            }\n                        }\n            }//this is for the gem healing (Done!)\n                characters[i].display();\n                //characters[i].attack();\n                if(characters[i].health <= 0){\n                    characters.splice(i, 1);\n                }//get rid of the defence weapon\n            }\n                \n            //}draws characters\n            popMatrix();\n            //{\n            strokeWeight(2);\n            fill(59, 59, 59);\n            stroke(31, 31, 31);\n            beginShape();\n                vertex(0, 0);\n                vertex(0, 75);\n                vertex(60, 75);\n                vertex(150, 70);\n                vertex(250, 75);\n                vertex(300, 70);\n                vertex(350, 70);\n                vertex(420, 75);\n                vertex(450, 70);\n                vertex(480, 85);\n                vertex(480, 105);\n                vertex(520, 115);\n                vertex(540, 110);\n                vertex(600, 115);\n                vertex(600, 0);\n            endShape();\n            image(cracks, 0, 0, 600, 70);\n            image(cracks, 480, 70, 600, 70);\n            //}rocky display\n            //{\n            noFill();\n            stroke(0, 0, 0);\n            strokeWeight(1);\n            quad(200, 90, 150, 120, 350, 120, 400, 90);\n            noStroke();\n            fill(255, 0, 0);\n            quad(-Stats.health+300, 90, -Stats.health+250, 120, Stats.health+250, 120, Stats.health+300, 90);\n            textAlign(CENTER);\n            textSize(20);\n            fill(0, 0, 0);\n            text(\"Health: \"+Stats.health, 270, 114);\n            //}heath bar\n            //{\n            buybutton(50, 30, 50, 50, function(){\n                selected = \"cristal\";\n            }, 125);//get a cristal\n            buybutton(120, 30, 50, 50, function(){\n                selected = \"tower\";\n            }, 175);//get a tower\n            buybutton(190, 30, 50, 50, function(){\n                selected = \"bomb\";\n            }, 75);//get a bomb\n            buybutton(260, 30, 50, 50, function(){\n                selected = \"plant\";\n            }, 50);//get a plant\n            cirbutton(370, 30, 50, 50, function(){\n                selected = \"none\";\n            }, width);//trash what you have in your hand\n            cristals(50, 45, 0.2, 0);\n            tower(120, 45, 0.12, 0);\n            bomb(190, 45, 0.3);\n            plants(260, 45, 0.3, 0);\n            //{\n            pushMatrix();\n            translate(0, -5);\n            strokeWeight(1);\n            fill(133, 133, 133);\n            quad(375, 30, 350, 30, 355, 50, 370, 50);\n            line(355, 30, 360, 50);\n            line(363, 30, 363, 50);\n            line(370, 30, 367, 50);\n            pushMatrix();\n            rotate(50);\n            ellipse(277, -265, 20, 10);\n            rect(274, -267, 8, 3);\n            popMatrix();\n            popMatrix();\n            //}trash can\n            //}top buttons\n            //{\n            textSize(30);\n            fill(110, 110, 110);\n            text(\"STATS:\", 530, 30);\n            textSize(15);\n            text(\"Selected: \"+selected, 530, 55);\n            text(\"Money: \"+Stats.money, 530, 75);\n            text(\"Time: \"+round(Stats.wavetime), 530, 95);\n            //}stats\n            pushMatrix();\n            //{\n                for(var i = 0;i < characters.length;i++){\n                    for(var j = 0;j < enemies.length;j++){\n                        var Characters = characters[i];\n                        var Enemies = enemies[j];\n                        if(Enemies.type === \"troop\"){\n                            if (dist(Enemies.x, Enemies.y, Characters.x, Characters.y) < Enemies.range/2&&Enemies.reload < 0) {\n                                Characters.health -= Enemies.dmg;//damage enemy\n                                Enemies.reload = 70;//restart reload timer\n                            }\n                        }//Trooper (Done)\n                        if(Enemies.type === \"bomb\"){\n                            if (Enemies.active) {\n                                if(dist(Enemies.x, Enemies.y, Characters.x, Characters.y) < Enemies.explosionRadius){\n                                    Characters.health -= Enemies.dmg;//damage all good guys in the area\n                                }\n                                shakeTime = 15;//start the screen shake timer\n                                rumble = true;//make a rock fall\n                            }//explode all in range\n                        }//bomb (Done)\n\n                        if(Characters.type === \"bomb\"){\n                            if (dist(Characters.x, Characters.y, Enemies.x, Enemies.y) < Characters.range&&Enemies.type !== \"bomb\") {\n                                Characters.active = true;//trigger bomb\n                            }//light the bomb if stepped on\n                            if (dist(Characters.x, Characters.y, Enemies.x, Enemies.y) < Characters.explosionRadius && Characters.active) {\n                                Enemies.health = 0;//blow up all enemies in the area\n                                shakeTime = 50;//start the screen shake timer\n                                rumble = true;//make a rock fall\n                            }//explode all in range\n                        }//bomb (Done!)\n                        if(Characters.type === \"tower\"){\n                            if (dist(Characters.x, Characters.y, Enemies.x, Enemies.y) < Characters.range/2&&Characters.reload < 0&&Enemies.type !== \"bomb\") {\n                                Enemies.health -= Characters.dmg;//damage enemy\n                                Characters.reload = 50;//restart reload timer\n                                //{\n                                noFill();\n                                strokeWeight(5);\n                                stroke(255, 255, 255);\n                                beginShape();\n                                vertex(Characters.x, Characters.y-80);\n                                vertex((Characters.x+Enemies.x+random(50, -50))/2, (Characters.y-80+Enemies.y+random(50, -50))/2);\n                                \n                                vertex(Enemies.x, Enemies.y);\n                                endShape();\n                                //}lightning\n                            }\n                        }//ZapTower (Done!)\n                        if(Characters.type === \"plant\"){\n                            if (dist(Characters.x, Characters.y, Enemies.x, Enemies.y) < Characters.range/2&&Characters.reload < 0&&Enemies.type !== \"bomb\") {\n                                Enemies.health -= Characters.dmg;//damage enemy\n                                Characters.reload = 30;//restart reload timer\n                                Characters.bite = true;\n                            }\n                        }//ZapTower (Done!)\n                    }\n                }\n                //}people attacking enemies & vice versa\n            if(click&&mouseY>250){\n                if(selected === \"tower\"){\n                    characters.push(new ZapTower(mouseX, mouseY, random(1.4, 1.7)));\n                    Stats.money -= 175;\n                }\n                if(selected === \"cristal\"){\n                    characters.push(new Cristals(mouseX, mouseY, random(1.3, 1.6)));\n                    Stats.money -= 125;\n                }\n                if(selected === \"bomb\"){\n                    characters.push(new Bomb(mouseX, mouseY));\n                    Stats.money -= 75;\n                }\n                if(selected === \"plant\"){\n                    characters.push(new Plant(mouseX, mouseY, random(1, 2)));\n                    Stats.money -= 50;\n                }\n                selected = \"none\";\n                characters.sort(function(chA, chB){return chA.y - chB.y;});//thanks to Lerry Serflaten for this! (it make the images apear behind another image if it is higher)\n            }//placing things like (tower, cristals, bomb, plant)\n            //{\n            bombSpawn = round(random(1, 3));\n            troopSpawn = round(random(1, maxAmt));\n            if (frameCount % spawnrate < 1) {\n                for (var i = 0; i < troopSpawn; i+=1) {\n                        enemies.push(new Trooper(650, random(250, 390), random(0.7, 1)));\n                }//troop\n                if(spawnrate > 10){\n                    spawnrate -= 5;\n                }\n                if(hard){\n                    maxAmt += 0.5;\n                }\n                else{\n                    maxAmt += 0.3;\n                }\n                for (var i = 0; i < bombSpawn; i+=1) {\n                    enemies.push(new Grenade(random(250, 390), random(2, 4), random(10, 500)));\n                }//grenades/bombs\n                enemies.sort(function(enA, enB){return enA.y - enB.y;});//thanks to Lerry Serflaten for this! (it make the images apear behind another image if it is higher)\n            }\n            //}spawning bad guys\n            //{\n            if(selected !== \"none\"&&mouseY>250){\n                cursor(\"Crosshair\");\n                fill(255, 255, 255);\n                noStroke();\n                rect(mouseX-10, mouseY-70+cos(frameCount * 3) * 5, 20, 30);\n                triangle(mouseX-20, mouseY-41+cos(frameCount * 3) * 5, mouseX+20, mouseY-41+cos(frameCount * 3) * 5, mouseX, mouseY-20+cos(frameCount * 3) * 5);\n                fill(0, 0, 0, 100);\n                ellipse(mouseX, mouseY, 50+cos(frameCount * 3) * 5, 10);\n            }\n            //}what your mouse looks like when you've \n            fill(0, 0, 0, 150);\n            textSize(15);\n            //frame rate\n            text(this.__frameRate.toFixed(0), 580, 390);\n            /*\n            _clearLogs();\n            //println(round(maxAmt));\n            //println(spawnrate);\n            //println(bombSpawn);\n            fill(255, 255, 255);\n            text(\"How many troops are going to spawn: \"+troopSpawn+\"\\nSpawn rate: \"+spawnrate+\"\\nHow many bombs are going to spawn: \"+bombSpawn+\"\\nHow many troops are allowed to spawn: \"+round(maxAmt), 300, 200);\n            */ //debuging\n            if(Stats.health < 5){\n                deadPic = get(0, 0, width, height);\n                scene = \"dead\";\n            }\n        break;\n        case \"dead\":\n            background(0, 0, 0);\n            //{\n            textFont(ARB, 70);\n            textAlign(CENTER, CENTER);\n            pushMatrix();\n            translate(300, 50);\n            fill(255, 255, 255);\n            for(var i = 0; i < 360; i+= 30) {\n                text(\"You Lost!\", sin(i)*2, cos(i)*2);\n            }\n            fill(0, 0, 0);\n            text(\"You Lost!\", 0, 0);\n            popMatrix();\n            //}text\n            imageMode(CENTER);\n            image(deadPic, 300, 200, picSize, picSize/2);\n            if(picSize > 400){\n                picSize -= 2;\n            }\n            else{\n                noFill();\n                stroke(255, 0, 0);\n                strokeWeight(2);\n                ellipse(460, 145, 80, 15);\n                fill(255, 255, 255);\n                textSize(20);\n                text(\"Top four best players!\", 300, 120);\n                text(\"Tell me your best time in the T&T!\", 300, 380);\n                for (var i = 0; i < 7; i++) {\n                    text(Scores[i].Name+\" | \"+Scores[i].Score, 300, i*40+150);\n    \n}\n                \n            }\n            Scores.sort(function(a, b) {\n                return b.Score - a.Score;\n            });\n        break;\n    }\n    }\n    catch(err){\n    }\n    click = false;\n};\n","title":"Cavern Clash","votes":31,"created":"2 days ago","updated":"11 hours ago","type":"PJS","author":{"name":"Avenger(Off)","id":"kaid_9032986298497221170369627","avatar":"/images/avatars/svg/leaf-blue.svg"},"dimensions":{"width":600,"height":400},"forks":[],"posts":{"tips":[{"replyCount":0,"votes":6,"date":"2024-10-26T08:56:25.76817Z","author":{"name":"Avenger(Off)","id":"kaid_9032986298497221170369627","avatar":"/images/avatars/svg/leaf-blue.svg"},"text":"*Subscribe to see more games*!\nhttps://www.khanacademy.org/computer-programming/avengers-sub-page/5088508691267584","locked":false,"pinned":false,"replies":[]},{"replyCount":5,"votes":4,"date":"2024-10-26T08:57:20.041587Z","author":{"name":"Avenger(Off)","id":"kaid_9032986298497221170369627","avatar":"/images/avatars/svg/leaf-blue.svg"},"text":"*Post your scores here*:\n_Please be honest_","locked":false,"pinned":false,"replies":[{"date":"2024-10-26T20:51:59.168577Z","author":{"name":"Panda15","id":"kaid_9155426718383676698036057","avatar":"/images/avatars/svg/duskpin-ultimate.svg"},"text":"got 406"},{"date":"2024-10-26T21:06:51.809727Z","author":{"name":"The Behemoth","id":"kaid_162227050418593899377700","avatar":"/images/avatars/svg/primosaur-ultimate.svg"},"text":"I hit 375 and then the game broke. all my towers disappeared and the slugs eyes moved forward outside of their bodies. It was real weird. but besides that, an extremely good game."},{"date":"2024-10-27T00:37:19.601893Z","author":{"name":"Avenger(Off)","id":"kaid_9032986298497221170369627","avatar":"/images/avatars/svg/leaf-blue.svg"},"text":"@Panda15\nAdded you\n\n@The Behemoth\nOhhh I'm really sorry about that, I don't know how to fix that problem but, try (when it crashes) to type something and then delete it, and it _might_ work. (just don't create a new line of code)\nAdded you"},{"date":"2024-10-27T20:59:32.447148Z","author":{"name":"RandomMountain","id":"kaid_2869307789786991801171479","avatar":"/images/avatars/svg/piceratops-seedling.svg"},"text":"I got 544, lightning towers are sufficient until the end of the game, then you spam mines:"},{"date":"2024-10-27T22:10:35.487776Z","author":{"name":"𝕭𝖑𝖚𝖊 𝕲𝖍𝖔𝖚𝖑","id":"kaid_6776820901948503135214173","avatar":"/images/avatars/svg/area-52-blue.svg"},"text":"413\nhttps://www.khanacademy.org/computer-programming/spin-off-of-cavern-clash/5401868817055744\nPLANT LIFE & TOWERS FRFR"}]},{"replyCount":1,"votes":2,"date":"2024-10-27T01:40:07.508544Z","author":{"name":"Radar","id":"kaid_3902988618718040904060736","avatar":"/images/avatars/svg/leafers-seed.svg"},"text":"Noice! Vote++ Got 375.","locked":false,"pinned":false,"replies":[{"date":"2024-10-27T04:59:08.528935Z","author":{"name":"Avenger(Off)","id":"kaid_9032986298497221170369627","avatar":"/images/avatars/svg/leaf-blue.svg"},"text":"Thanks!\nAdded you!"}]},{"replyCount":1,"votes":1,"date":"2024-10-27T05:08:53.872306Z","author":{"name":"Cyan Spirit","id":"kaid_1418532449612597727143882","avatar":"/images/avatars/svg/cacteye-blue.svg"},"text":"Cool game! I love the graphics!\n\nI got 230...","locked":false,"pinned":false,"replies":[{"date":"2024-10-27T06:20:52.534124Z","author":{"name":"Avenger(Off)","id":"kaid_9032986298497221170369627","avatar":"/images/avatars/svg/leaf-blue.svg"},"text":"Thank you!"}]},{"replyCount":7,"votes":1,"date":"2024-10-27T12:09:08.835712Z","author":{"name":"𝐂𝐥𝐨𝐯𝐞𝐫","id":"kaid_2287805493149654773942312","avatar":"/images/avatars/svg/stelly-green.svg"},"text":"Cool! Very fun to play!","locked":false,"pinned":false,"replies":[{"date":"2024-10-27T12:24:19.425151Z","author":{"name":"Avenger(Off)","id":"kaid_9032986298497221170369627","avatar":"/images/avatars/svg/leaf-blue.svg"},"text":"Thanks Clover! =)"},{"date":"2024-10-27T12:25:37.65513Z","author":{"name":"Avenger(Off)","id":"kaid_9032986298497221170369627","avatar":"/images/avatars/svg/leaf-blue.svg"},"text":"Are you new or do I know you by a different name?"},{"date":"2024-10-27T12:32:34.526411Z","author":{"name":"𝐂𝐥𝐨𝐯𝐞𝐫","id":"kaid_2287805493149654773942312","avatar":"/images/avatars/svg/stelly-green.svg"},"text":"You might know me as CaptPockets (but probably not), I recently changed my name and avatar. :)"},{"date":"2024-10-27T12:34:46.443979Z","author":{"name":"Avenger(Off)","id":"kaid_9032986298497221170369627","avatar":"/images/avatars/svg/leaf-blue.svg"},"text":"Ah, I remember you actually =)\nwhy the change?"},{"date":"2024-10-27T12:37:56.128399Z","author":{"name":"𝐂𝐥𝐨𝐯𝐞𝐫","id":"kaid_2287805493149654773942312","avatar":"/images/avatars/svg/stelly-green.svg"},"text":"=)\nI decided to change it because I just wanted to change things up. (and also I needed a name that fit with the green star thing) ¯\\_(ツ)_/¯"},{"date":"2024-10-27T12:53:41.55607Z","author":{"name":"Avenger(Off)","id":"kaid_9032986298497221170369627","avatar":"/images/avatars/svg/leaf-blue.svg"},"text":"I think that your name and avatar go together great =)"},{"date":"2024-10-27T13:08:02.258876Z","author":{"name":"𝐂𝐥𝐨𝐯𝐞𝐫","id":"kaid_2287805493149654773942312","avatar":"/images/avatars/svg/stelly-green.svg"},"text":"Thanks! :)"}]},{"replyCount":1,"votes":1,"date":"2024-10-26T13:16:50.885952Z","author":{"name":"Duke :P","id":"kaid_351465532815782433620675","avatar":"/images/avatars/svg/starky-ultimate.svg"},"text":"Sweet job Avenger!\nI got a tiny 365 haha :P","locked":false,"pinned":false,"replies":[{"date":"2024-10-27T00:33:25.709378Z","author":{"name":"Avenger(Off)","id":"kaid_9032986298497221170369627","avatar":"/images/avatars/svg/leaf-blue.svg"},"text":"Thanks Duke!\nAdded you"}]},{"replyCount":1,"votes":1,"date":"2024-10-27T22:08:14.601106Z","author":{"name":"𝕭𝖑𝖚𝖊 𝕲𝖍𝖔𝖚𝖑","id":"kaid_6776820901948503135214173","avatar":"/images/avatars/svg/area-52-blue.svg"},"text":"Wow.  \nI am too powerful 😈😈😈😈\nPLANT LIFE 10000%%%%\n413\nhttps://www.khanacademy.org/computer-programming/spin-off-of-cavern-clash/5401868817055744","locked":false,"pinned":false,"replies":[{"date":"2024-10-27T22:10:00.538775Z","author":{"name":"𝕭𝖑𝖚𝖊 𝕲𝖍𝖔𝖚𝖑","id":"kaid_6776820901948503135214173","avatar":"/images/avatars/svg/area-52-blue.svg"},"text":"Yeah, so for a tip, USe PLANts! Stack the plants right on top of each other.  If the plant that is getting damaged is getting low, stack a new plant on top, and then that plant will start to get eaten instead of the dying plant :D"}]},{"replyCount":0,"votes":1,"date":"2024-10-27T13:23:58.104983Z","author":{"name":"amarumaih","id":"kaid_8373496935673991655779413","avatar":"/images/avatars/svg/starky-ultimate.svg"},"text":"225 time","locked":false,"pinned":false,"replies":[]},{"replyCount":1,"votes":1,"date":"2024-10-27T19:32:10.124224Z","author":{"name":"The Chaotic Coder","id":"kaid_8760702353971816472240086","avatar":"/images/avatars/svg/cs-hopper-cool.svg"},"text":"Cool game! Is this based off of PvZ?\n\nAlso, make sure to check out the website of Chaotic Coding Studios, and check out some of my projects!\n\nLink to Chaotic Coding Studios Website: https://www.khanacademy.org/computer-programming/chaotic-coding-studios/6118469681987584","locked":false,"pinned":false,"replies":[{"date":"2024-10-27T23:10:09.339341Z","author":{"name":"The Chaotic Coder","id":"kaid_8760702353971816472240086","avatar":"/images/avatars/svg/cs-hopper-cool.svg"},"text":"Please check out this game: https://www.khanacademy.org/computer-programming/khan-brawl-clash-at-sunset/4919789339721728\n\nI promise it is really fun and worth your time!"}]}],"questions":[]}}